/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.formdev.flatlaf.FlatLightLaf;
import controller.UsuarioController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import model.Usuario;
import tools.CaixaDeDialogo;
import tools.Combos;

/**
 *
 * @author jdhein
 */
public class TelaUsuarios extends javax.swing.JFrame {

    UsuarioController objUsuarioController;
    Combos comboBairros;
    /**
     * Creates new form TelaUsuarios
     */
    public TelaUsuarios() {
        initComponents();
        
       try {
           
            comboBairros = new Combos(cbBairro);
            comboBairros.preencheCombo("SELECT id, nome FROM bairros "
                                        + "ORDER BY nome");
                       
       } catch (SQLException ex) {
            CaixaDeDialogo.obterinstancia().exibirMensagem("Erro no init");
        }
        
        limparTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        txtConfirmarSenha = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbUsuarios = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        cbBairro = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblId.setText("ID");
        getContentPane().add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 53, 154, -1));

        jLabel2.setText("Login");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 87, -1, -1));
        getContentPane().add(txtLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 109, 154, -1));

        jLabel3.setText("Senha");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 143, -1, -1));
        getContentPane().add(txtSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 165, 154, -1));
        getContentPane().add(txtConfirmarSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 165, 135, -1));

        jLabel4.setText("Bairro");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 199, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cadastro de Usuários");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 388, -1));

        jtbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbUsuariosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtbUsuarios);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 380, 110));

        jLabel6.setText("Nome");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 31, -1, -1));

        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));

        cbBairro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bairro 1", "Bairro 2", "Bairro 3", "Bairro 4" }));
        getContentPane().add(cbBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 140, -1));

        jLabel7.setText("Confirmar Senha");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        boolean retorno = validarDados();
        if(retorno){
            
            Usuario usuario = guardarDados();
            //SALVAR NO BANCO DE DADOS
            
            objUsuarioController = new UsuarioController();
            
            if(lblId.getText().equals("ID")){
                String ret = objUsuarioController.incluir(usuario);
                if(ret.equals("")){
                     CaixaDeDialogo.obterinstancia().exibirMensagem("Usuário incluído com sucesso");
                }else{
                     CaixaDeDialogo.obterinstancia().exibirMensagem(ret);
                }
            }else{
                usuario.setId(Integer.parseInt(lblId.getText()));
                boolean ret = objUsuarioController.alterar(usuario);
                if(ret){
                     CaixaDeDialogo.obterinstancia().exibirMensagem("Usuário alterado com sucesso");
                }else{
                     CaixaDeDialogo.obterinstancia().exibirMensagem("Erro ao alterar");
                }
            }
                        
            limparTela();            
            
        }else{
            CaixaDeDialogo.obterinstancia().exibirMensagem("Erro ao validar");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jtbUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbUsuariosMousePressed
        try {
            //pega a linha selecionada
            int linhaSelecionada = jtbUsuarios.getSelectedRow();

            // Primeira coluna da linha
            String codigo = jtbUsuarios.getModel().getValueAt(linhaSelecionada, 0).toString();

            //buscar no banco de dados o registro e preencher nos campos da tela
            objUsuarioController = new UsuarioController();
            Usuario objeto = objUsuarioController.buscar(codigo);
                
            //Verifica se clicou na coluna 2 => EXCLUIR
            if (jtbUsuarios.isColumnSelected(2)) {
                try {
                    boolean wPergunta = CaixaDeDialogo.obterinstancia()
                            .pedirConfirmacao("Tem certeza de que deseja excluir?", "", 'p');
                    if (wPergunta == true) {
                        //exclusão do registro selecionado
                        objUsuarioController = new UsuarioController();
                        boolean retorno = objUsuarioController.excluir(codigo);
                        if(retorno){
                            limparTela();
                            CaixaDeDialogo.obterinstancia().exibirMensagem("Registro excluído com sucesso");
                        }else{
                            CaixaDeDialogo.obterinstancia().exibirMensagem("Erro ao excluir");
                        }
                    }                    

                } catch (Exception ex) {
                    CaixaDeDialogo.obterinstancia().exibirMensagem("Erro: " + ex.getMessage());
                }
            } else {
                if (objeto != null) {
                    preencherCampos(objeto);
                }
            }


        } catch (Exception ex) {
            CaixaDeDialogo.obterinstancia().exibirMensagem(ex.getMessage(), 'e');
        }
    }//GEN-LAST:event_jtbUsuariosMousePressed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        
        limparTela();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void limparTela(){
        lblId.setText("ID");
        txtNome.setText("");
        txtLogin.setText("");
        txtLogin.setEnabled(true);//libera a edição no campo
        txtSenha.setText("");
        txtConfirmarSenha.setText("");
        cbBairro.setSelectedIndex(0);
        
        atualizarTabela();
    }
    
    private void preencherCampos(Usuario objeto){
        try{
            
            lblId.setText(String.valueOf(objeto.getId()));
            txtLogin.setText(objeto.getLogin());
            txtLogin.setEnabled(false);//bloqueia a edição do campo na hora de alterar
            txtNome.setText(objeto.getNome());
            
            comboBairros.setaComboBox(String.valueOf(objeto.getId_bairro()));
            
        }catch(Exception ex){
            CaixaDeDialogo.obterinstancia().exibirMensagem(ex.getMessage(), 'e');
        }
    }
    
    private Usuario guardarDados(){
        try{
            Usuario objeto = new Usuario();
            
            objeto.setLogin(txtLogin.getText().trim());
            objeto.setNome(txtNome.getText().trim());
            objeto.setSenha(txtSenha.getText());
            
            Combos c = (Combos) cbBairro.getSelectedItem();
            int cod_bairro = Integer.parseInt(c.getCodigo());
            objeto.setId_bairro(cod_bairro);
                        
            return objeto;
            
        }catch(Exception ex){
            return null;
        }
    }
    
    private boolean validarDados(){
        //validar se o nome está em branco
        if(txtNome.getText().trim().equals("")){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Informe um nome!");
            return false;
        }
        //validar se o login está em branco
        if(txtLogin.getText().trim().equals("")){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Informe um login!");
            return false;
        }
        //validar se tem espaço no login
        int indice = txtLogin.getText().indexOf(" ");
        if(indice >= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Não informe espaços em branco no login!");
            return false;
        }
        
        //validar senha em branco
        if(txtSenha.getText().trim().equals("") && lblId.getText().equals("ID")){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Informe uma senha!");
            return false;
        }
        
        if(!txtSenha.getText().equals(txtConfirmarSenha.getText())){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Ambas as senhas precisam ser iguais!");
            return false;
        }
        
        //validar bairro
        if(cbBairro.getSelectedIndex() <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha um bairro!");
            return false;
        }
                
        return true;
    }
    
    //função para buscar as informações e preencher em tela
    private void atualizarTabela() {
        try {
            objUsuarioController = new UsuarioController();
            objUsuarioController.preencher(jtbUsuarios);

        } catch (Exception ex) {
            CaixaDeDialogo.obterinstancia().exibirMensagem("ERRO:" + ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //CUSTOMIZAR TEMA
        try{
            UIManager.setLookAndFeel(new FlatLightLaf());
        }catch(Exception ex){
            System.out.println("ERRO NA TROCA DO TEMA!!!");
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbBairro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbUsuarios;
    private javax.swing.JLabel lblId;
    private javax.swing.JPasswordField txtConfirmarSenha;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
